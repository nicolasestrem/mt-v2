name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  # Quick tests for PRs
  test-pr:
    if: github.event_name == 'pull_request'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
      
    - name: Run Playwright tests (PR - Quick Tests)
      run: npx playwright test tests/home.spec.ts tests/basic-functionality.spec.ts tests/form-functionality.spec.ts
      env:
        PUBLIC_WEB3FORMS_KEY: ${{ secrets.WEB3FORMS_KEY }}
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-pr
        path: playwright-report/
        retention-days: 7
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-pr
        path: test-results/
        retention-days: 7

  # Full tests for main branch
  test-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
      
    - name: Run Playwright tests (Main - Full Suite)
      run: npx playwright test
      env:
        PUBLIC_WEB3FORMS_KEY: ${{ secrets.WEB3FORMS_KEY }}
        EXTENDED_TESTS: true
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-main
        path: playwright-report/
        retention-days: 30

  # Scheduled comprehensive tests (nightly)
  scheduled-tests:
    if: github.event_name == 'schedule'
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Build project
      run: npm run build
    
    - name: Run All Tests with Extended Browsers
      run: npx playwright test
      env:
        PUBLIC_WEB3FORMS_KEY: ${{ secrets.WEB3FORMS_KEY }}
        EXTENDED_TESTS: true
    
    - name: Upload Scheduled Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: scheduled-test-results
        path: test-results/
        retention-days: 30

  # Visual regression tests (only on specific trigger)
  visual-tests:
    if: contains(github.event.head_commit.message, '[visual]') || github.event_name == 'workflow_dispatch'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium
    
    - name: Build project
      run: npm run build
    
    - name: Run Visual Regression Tests
      run: npx playwright test tests/visual-regression.spec.ts --project="Desktop Chrome"
      env:
        PUBLIC_WEB3FORMS_KEY: ${{ secrets.WEB3FORMS_KEY }}
    
    - name: Upload Visual Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results
        path: test-results/
        retention-days: 14

  # Mobile and browser compatibility tests are now included in main test runs
  # They use the streamlined device configurations from playwright.config.ts

  # Generate test summary
  test-summary:
    if: always() && (needs.test-pr.result != 'skipped' || needs.test-main.result != 'skipped')
    needs: [test-pr, test-main]
    runs-on: ubuntu-latest
    
    steps:
    - name: Generate Test Summary
      run: |
        echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Execution" >> $GITHUB_STEP_SUMMARY
        if [ "${{ needs.test-pr.result }}" != "skipped" ]; then
          echo "- **PR Tests**: ${{ needs.test-pr.result }}" >> $GITHUB_STEP_SUMMARY
        fi
        if [ "${{ needs.test-main.result }}" != "skipped" ]; then
          echo "- **Main Branch Tests**: ${{ needs.test-main.result }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Configuration" >> $GITHUB_STEP_SUMMARY
        echo "- **Core Browsers**: Chrome, Firefox" >> $GITHUB_STEP_SUMMARY
        echo "- **Mobile Devices**: iOS Safari, Android Chrome" >> $GITHUB_STEP_SUMMARY
        echo "- **Execution Time**: Optimized for < 15 min (PR) / < 30 min (Main)" >> $GITHUB_STEP_SUMMARY

  # Lighthouse CI for performance monitoring
  lighthouse:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Start server
      run: npm run preview &
      
    - name: Wait for server
      run: npx wait-on http://localhost:4321 --timeout 30000
    
    - name: Run Lighthouse CI
      id: lighthouse
      continue-on-error: true
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun || echo "Lighthouse assertions failed, but continuing"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Lighthouse Report Summary
      if: always()
      run: |
        echo "## Lighthouse Performance Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.lighthouse.outcome }}" == "success" ]; then
          echo "✅ All Lighthouse checks passed!" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Some Lighthouse checks did not meet targets" >> $GITHUB_STEP_SUMMARY
          echo "View the full report in the Lighthouse CI output above" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Reports are available in the workflow artifacts" >> $GITHUB_STEP_SUMMARY

  # Notify on failures
  notify-on-failure:
    if: failure()
    needs: [test-pr, test-main, scheduled-tests]
    runs-on: ubuntu-latest
    
    steps:
    - name: Create Issue on Test Failure
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/github-script@v7
      with:
        script: |
          const title = `Test Failure: ${context.workflow} - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Test Failure Report
          
          **Workflow**: ${context.workflow}
          **Run**: ${context.runNumber}
          **Commit**: ${context.sha}
          **Branch**: ${context.ref}
          
          ### Failed Jobs
          - PR Tests: ${{ needs.test-pr.result }}
          - Main Tests: ${{ needs.test-main.result }}
          - Scheduled Tests: ${{ needs.scheduled-tests.result }}
          
          **Action**: [View Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
          
          Please check the test results and fix any failing tests.
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'test-failure', 'automated']
          });