---
// Hero section component for Mobility Trailblazers
---

<section class="hero">
	<div class="container">
		<div class="hero-content">
			<div class="hero-text">
				<h1 class="hero-title">
					<span class="gradient-text">25 Mobility Trailblazers</span>
					<span class="gradient-text">in 25</span>
				</h1>
				
				<p class="hero-subtitle">
					<strong><em>Wir zeichnen 25 Menschen aus, die 2025 den Mobilitätswandel mutig und innovativ in Deutschland, der Schweiz und Österreich vorantreiben.</em></strong><br>
					<strong><em>Am 30. Oktober ist es so weit: Die Awards werden das erste Mal vergeben.</em></strong>
				</p>
				
				<h2 class="hero-tagline">Weil mobiler Wandel Mut braucht.</h2>
			</div>
			
			<div class="countdown-section">
				<div class="countdown-container">
					<div class="countdown-item">
						<div class="countdown-number" id="days">00</div>
						<div class="countdown-label">Tage</div>
					</div>
					<div class="countdown-item">
						<div class="countdown-number" id="hours">00</div>
						<div class="countdown-label">Stunden</div>
					</div>
					<div class="countdown-item">
						<div class="countdown-number" id="minutes">00</div>
						<div class="countdown-label">Minuten</div>
					</div>
					<div class="countdown-item">
						<div class="countdown-number" id="seconds">00</div>
						<div class="countdown-label">Sekunden</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<div class="hero-shape">
		<svg viewBox="0 0 1200 120" xmlns="http://www.w3.org/2000/svg">
			<path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" opacity=".25" fill="currentColor"></path>
			<path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" opacity=".5" fill="currentColor"></path>
			<path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="currentColor"></path>
		</svg>
	</div>
</section>

<style>
	.hero {
		position: relative;
		min-height: 100vh;
		display: flex;
		align-items: center;
		background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-accent) 100%);
		color: white;
		overflow: hidden;
		padding-top: 120px;
	}

	.hero-content {
		text-align: center;
		max-width: 800px;
		margin: 0 auto;
		z-index: 2;
		position: relative;
	}

	.hero-title {
		font-size: 4rem;
		font-weight: 700;
		margin-bottom: 2rem;
		line-height: 1.1;
	}

	.gradient-text {
		background: linear-gradient(45deg, #ffffff, #f0f0f0, #ffffff);
		background-size: 200% 200%;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
		animation: gradient 3s ease infinite;
	}

	@keyframes gradient {
		0% { background-position: 0% 50%; }
		50% { background-position: 100% 50%; }
		100% { background-position: 0% 50%; }
	}

	.hero-subtitle {
		font-size: 1.25rem;
		margin-bottom: 2rem;
		line-height: 1.6;
		opacity: 0.9;
	}

	.hero-tagline {
		font-size: 2rem;
		font-weight: 600;
		margin-bottom: 3rem;
		color: var(--color-accent);
	}

	.countdown-section {
		margin-top: 3rem;
	}

	.countdown-container {
		display: flex;
		justify-content: center;
		gap: 2rem;
		flex-wrap: wrap;
	}

	.countdown-item {
		background: rgba(255, 255, 255, 0.1);
		backdrop-filter: blur(10px);
		border: 2px solid rgba(255, 255, 255, 0.2);
		border-radius: 15px;
		padding: 1.5rem;
		min-width: 120px;
		text-align: center;
		transition: transform 0.3s ease;
	}

	.countdown-item:hover {
		transform: translateY(-5px);
	}

	.countdown-number {
		font-size: 2.5rem;
		font-weight: 700;
		color: var(--color-accent);
		margin-bottom: 0.5rem;
	}

	.countdown-label {
		font-size: 0.9rem;
		text-transform: uppercase;
		letter-spacing: 1px;
		opacity: 0.8;
	}

	.hero-shape {
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		overflow: hidden;
		line-height: 0;
		transform: rotate(180deg);
	}

	.hero-shape svg {
		position: relative;
		display: block;
		width: calc(100% + 1.3px);
		height: 120px;
	}

	.hero-shape path {
		fill: var(--color-background);
	}

	@media (max-width: 768px) {
		.hero-title {
			font-size: 2.5rem;
		}

		.hero-subtitle {
			font-size: 1rem;
		}

		.hero-tagline {
			font-size: 1.5rem;
		}

		.countdown-container {
			gap: 1rem;
		}

		.countdown-item {
			min-width: 80px;
			padding: 1rem;
		}

		.countdown-number {
			font-size: 1.8rem;
		}

		.countdown-label {
			font-size: 0.8rem;
		}
	}
</style>

<script>
	// Countdown timer functionality
	function updateCountdown() {
		const targetDate = new Date('2025-10-30T16:00:00').getTime();
		const now = new Date().getTime();
		const distance = targetDate - now;

		const daysEl = document.getElementById('days');
		const hoursEl = document.getElementById('hours');
		const minutesEl = document.getElementById('minutes');
		const secondsEl = document.getElementById('seconds');

		if (distance > 0) {
			const days = Math.floor(distance / (1000 * 60 * 60 * 24));
			const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
			const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
			const seconds = Math.floor((distance % (1000 * 60)) / 1000);

			if (daysEl) daysEl.textContent = days.toString().padStart(2, '0');
			if (hoursEl) hoursEl.textContent = hours.toString().padStart(2, '0');
			if (minutesEl) minutesEl.textContent = minutes.toString().padStart(2, '0');
			if (secondsEl) secondsEl.textContent = seconds.toString().padStart(2, '0');
		} else {
			// Event has passed
			if (daysEl) daysEl.textContent = '00';
			if (hoursEl) hoursEl.textContent = '00';
			if (minutesEl) minutesEl.textContent = '00';
			if (secondsEl) secondsEl.textContent = '00';
		}
	}

	// Update countdown every second
	setInterval(updateCountdown, 1000);
	updateCountdown(); // Initial call
</script>