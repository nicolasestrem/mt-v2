---
import '../styles/global.css';
import ScrollToTop from '../components/ScrollToTop.astro';
import SEO from '../components/SEO.astro';

export interface Props {
	title: string;
	description?: string;
	image?: string;
	noindex?: boolean;
}

const { title, description = "Nominieren Sie Persönlichkeiten für die 26 in 2026 Mobility Trailblazers Awards. Jetzt Vorschlag für die Mobilitätswende im DACH-Raum einreichen!", image = "/images/og-image.jpg", noindex = false } = Astro.props;
const isHomepage = Astro.url.pathname === '/';

// Get GA ID from environment variable
const gaId = import.meta.env.PUBLIC_GA_MEASUREMENT_ID || 'G-0C23GHZJQT';
---

<!doctype html>
<html lang="de">
	<head>
		<meta charset="UTF-8" />
		<!-- Enhanced Android viewport meta tag -->
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes, shrink-to-fit=no, viewport-fit=cover" />
		<!-- Android Chrome theme color -->
		<meta name="theme-color" content="#F8F0E3" />
		<!-- Prevent Android's auto-zoom on form focus -->
		<meta name="format-detection" content="telephone=no" />
		<!-- Favicon configuration for all platforms -->
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="192x192" href="/android-chrome-192x192.png" />
		<link rel="icon" type="image/png" sizes="512x512" href="/android-chrome-512x512.png" />
		
		<!-- PWA Manifest -->
		<link rel="manifest" href="/manifest.json" />
		
		<!-- iOS PWA Support -->
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="default" />
		<meta name="apple-mobile-web-app-title" content="Mobility Trailblazers" />
		
		<meta name="generator" content={Astro.generator} />
		
		<!-- SEO Component handles all meta tags -->
		<SEO title={title} description={description} image={image} noindex={noindex} />
		
		<!-- Tarteaucitron CSS -->
		<link rel="stylesheet" href="/tarteaucitron/css/tarteaucitron.css">
		<link rel="stylesheet" href="/tarteaucitron-custom.css">

		<!-- Resource hints for performance -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link rel="dns-prefetch" href="https://widgets.sociablekit.com">
		<link rel="dns-prefetch" href="https://www.linkedin.com">
		
		<!-- Preload critical Roboto font files for immediate LCP text -->
		<link rel="preload" href="https://fonts.gstatic.com/s/roboto/v32/KFOmCnqEu92Fr1Mu4mxK.woff2" as="font" type="font/woff2" crossorigin fetchpriority="high">
		<link rel="preload" href="https://fonts.gstatic.com/s/roboto/v32/KFOlCnqEu92Fr1MmEU9fBBc4.woff2" as="font" type="font/woff2" crossorigin>
		
		<!-- Load other fonts asynchronously -->
		<link rel="preload" href="https://fonts.googleapis.com/css2?family=Cabin:wght@400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
		<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Cabin:wght@400;500;600;700&family=Poppins:wght@400;500;600;700&display=swap"></noscript>

		<!-- Preload critical images for homepage only -->
		{isHomepage && (
			<>
				<link rel="preload" as="image" href="/images/about/fernsehturm-berlin.jpg" fetchpriority="high" media="(min-width: 768px)">
				<link rel="preload" as="image" href="/images/logo.webp" fetchpriority="high">
			</>
		)}

		<!-- Page-specific head content -->
		<slot name="head" />
		
		<!-- Inline critical CSS with optimized font loading -->
		<style>
			/* Critical Roboto font-face declarations with font-display: swap */
			@font-face {
				font-family: Roboto;
				font-style: normal;
				font-weight: 400;
				font-display: swap;
				src: url('https://fonts.gstatic.com/s/roboto/v32/KFOmCnqEu92Fr1Mu4mxK.woff2') format('woff2');
				unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
			}

			@font-face {
				font-family: Roboto;
				font-style: normal;
				font-weight: 700;
				font-display: swap;
				src: url('https://fonts.gstatic.com/s/roboto/v32/KFOlCnqEu92Fr1MmEU9fBBc4.woff2') format('woff2');
				unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
			}
			
			/* Critical hero subtitle styles with performance optimizations */
			.hero-subtitle {
				font-family: Roboto, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
				font-size: 1.25rem;
				font-weight: 400;
				margin-bottom: 2rem;
				line-height: 1.6;
				min-height: 4rem;
				contain: layout style;
				will-change: auto;
				font-kerning: auto;
				text-rendering: optimizespeed;
			}
			
			/* Responsive font sizes */
			@media (max-width: 768px) {
				.hero-subtitle {
					font-size: 1rem;
					min-height: 3.5rem;
				}
			}
		</style>
	</head>
	<body>
		<slot />
		<ScrollToTop />
		
		<!-- Enhanced scroll behavior for internal links -->
		<script is:inline>
		(function() {
			// Header height offset (approximately 89px + 11px buffer = 100px)
			var HEADER_OFFSET = 100;
			
			// Function to smoothly scroll to element with offset
			function smoothScrollToElement(targetId) {
				var target = document.getElementById(targetId);
				if (!target) return false;
				
				var targetPosition = target.getBoundingClientRect().top + window.pageYOffset - HEADER_OFFSET;
				
				// Use modern scrollTo with smooth behavior if supported
				if ('scrollBehavior' in document.documentElement.style) {
					window.scrollTo({
						top: targetPosition,
						behavior: 'smooth'
					});
				} else {
					// Fallback for older browsers
					window.scrollTo(0, targetPosition);
				}
				return true;
			}
			
			// Handle internal link clicks
			function handleInternalLinks() {
				var links = document.querySelectorAll('a[href^="#"], a[href^="/#"]');
				
				for (var i = 0; i < links.length; i++) {
					links[i].addEventListener('click', function(e) {
						var href = this.getAttribute('href');
						var targetId = href.replace(/^\/?#/, ''); // Remove leading /# or #
						
						if (targetId && smoothScrollToElement(targetId)) {
							e.preventDefault();
							// Update URL without jumping
							if (history.pushState) {
								history.pushState(null, null, '#' + targetId);
							} else {
								// Fallback for older browsers
								window.location.hash = targetId;
							}
						}
					});
				}
			}
			
			// Initialize when DOM is ready
			if (document.readyState === 'loading') {
				document.addEventListener('DOMContentLoaded', handleInternalLinks);
			} else {
				handleInternalLinks();
			}
			
			// Handle direct hash navigation on page load
			if (window.location.hash) {
				setTimeout(function() {
					var targetId = window.location.hash.substring(1);
					smoothScrollToElement(targetId);
				}, 100);
			}
		})();
		</script>
		
		<!-- Service Worker Registration and PWA Install -->
               <script is:inline>
               (function() {
                       const DEBUG = import.meta.env.DEV;

                       // Register service worker
                       if ('serviceWorker' in navigator) {
                               window.addEventListener('load', function() {
                                       navigator.serviceWorker.register('/service-worker.js')
                                               .then(function(registration) {
                                                       if (DEBUG) console.log('ServiceWorker registration successful');
							
							// Check for updates periodically
							setInterval(function() {
								registration.update();
							}, 300000); // Check every 5 minutes
						})
                                               .catch(function(err) {
                                                       if (DEBUG) console.log('ServiceWorker registration failed: ', err);
                                               });
                               });
                       }
			
			// Handle PWA install prompt
			let deferredPrompt;
			let installButton = null;
			let hasNativePrompt = false; // Track if native prompt is available
			
			window.addEventListener('beforeinstallprompt', function(e) {
				// Prevent Chrome 67 and earlier from automatically showing the prompt
				e.preventDefault();
				// Stash the event so it can be triggered later
				deferredPrompt = e;
				hasNativePrompt = true; // Mark that we have native prompt support
				
				// Create or show install button if not already installed
				if (!window.matchMedia('(display-mode: standalone)').matches) {
					showInstallButton();
				}
			});
			
			function showInstallButton() {
				// Check if button already exists
				if (document.getElementById('pwa-install-button')) return;
				
				// Create install button
				var button = document.createElement('button');
				button.id = 'pwa-install-button';
				button.innerHTML = 'App installieren';
				button.style.cssText = `
					position: fixed;
					bottom: 20px;
					left: 20px;
					background: linear-gradient(135deg, #003C3D, #C1693C);
					color: #fff;
					border: none;
					padding: 12px 24px;
					border-radius: 50px;
					font-weight: 600;
					cursor: pointer;
					z-index: 9999;
					box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
					transition: all 0.3s ease;
					font-family: system-ui, -apple-system, sans-serif;
				`;
				
				// Add hover effect
				button.addEventListener('mouseenter', function() {
					this.style.transform = 'translateY(-2px)';
					this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.3)';
				});
				
				button.addEventListener('mouseleave', function() {
					this.style.transform = 'translateY(0)';
					this.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.2)';
				});
				
				// Handle install click
				button.addEventListener('click', function() {
					if (deferredPrompt) {
						// Hide button immediately to prevent double prompts
						button.style.display = 'none';
						
						// Hide any Android banner if it exists
						var androidBanner = document.getElementById('android-install-banner');
						if (androidBanner) {
							androidBanner.remove();
						}
						
						// Show the install prompt
						deferredPrompt.prompt();
                                               // Wait for the user to respond to the prompt
                                               deferredPrompt.userChoice.then(function(choiceResult) {
                                                       if (choiceResult.outcome === 'accepted') {
                                                               if (DEBUG) console.log('User accepted the install prompt');
                                                       } else {
                                                               // Show button again if user declined
                                                               button.style.display = 'block';
                                                       }
                                                       deferredPrompt = null;
                                               });
                                       }
                               });
				
				document.body.appendChild(button);
				
				// Add close button functionality
				var closeBtn = document.createElement('span');
				closeBtn.innerHTML = '×';
				closeBtn.style.cssText = `
					position: absolute;
					top: -5px;
					left: -5px;
					background: #ff4444;
					color: #fff;
					width: 20px;
					height: 20px;
					border-radius: 50%;
					display: flex;
					align-items: center;
					justify-content: center;
					cursor: pointer;
					font-size: 16px;
					line-height: 1;
				`;
				closeBtn.addEventListener('click', function(e) {
					e.stopPropagation();
					button.style.display = 'none';
				});
				button.appendChild(closeBtn);
				
				// Hide button after 30 seconds if not clicked
				setTimeout(function() {
					if (button && button.style.display !== 'none') {
						button.style.opacity = '0';
						setTimeout(function() {
							if (button.parentNode) {
								button.parentNode.removeChild(button);
							}
						}, 300);
					}
				}, 30000);
			}
			
                       // Check if app is already installed
                       window.addEventListener('appinstalled', function() {
                               if (DEBUG) console.log('PWA was installed');
                               var button = document.getElementById('pwa-install-button');
                               if (button) {
                                       button.style.display = 'none';
                               }
                       });
			
			// Platform-specific install instructions
			var isIOS = navigator.standalone === false && /iPhone|iPad|iPod/.test(navigator.userAgent);
			var isAndroid = /Android/.test(navigator.userAgent);
			var isChrome = /Chrome/.test(navigator.userAgent) && !/Edge/.test(navigator.userAgent);
			
			// iOS install instructions (since it doesn't support beforeinstallprompt)
			if (isIOS) {
				// Show iOS-specific install instructions after 10 seconds
				setTimeout(function() {
					// Only show if not already installed and not dismissed
					if (!window.navigator.standalone && !localStorage.getItem('ios-install-dismissed')) {
						showIOSInstallInstructions();
					}
				}, 10000);
			}
			
			// Android Chrome install instructions (as fallback if beforeinstallprompt doesn't fire)
			if (isAndroid && isChrome && !window.matchMedia('(display-mode: standalone)').matches) {
				setTimeout(function() {
					// Only show if no native prompt available and not dismissed
					if (!hasNativePrompt && !deferredPrompt && !localStorage.getItem('android-install-dismissed')) {
						showAndroidInstallInstructions();
					}
				}, 15000); // Wait longer to see if beforeinstallprompt fires
			}
			
			function showIOSInstallInstructions() {
				var banner = document.createElement('div');
				banner.id = 'ios-install-banner';
				banner.style.cssText = `
					position: fixed;
					bottom: 0;
					left: 0;
					right: 0;
					background: white;
					padding: 15px;
					box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
					z-index: 9999;
					font-family: system-ui, -apple-system, sans-serif;
					text-align: center;
				`;
				banner.innerHTML = `
					<p style="margin: 0 0 10px 0; color: #333;">
						Diese Seite als App installieren. Tippen Sie auf das Teilen-Symbol 
						<span style="display: inline-block; font-size: 20px; vertical-align: middle;">⬆️</span>
						und wählen Sie „Zum Home-Bildschirm".
					</p>
					<button onclick="this.parentElement.remove(); localStorage.setItem('ios-install-dismissed', 'true');" 
							style="background: #007AFF; color: #fff; border: none; padding: 8px 20px; border-radius: 20px; cursor: pointer;">
						Verstanden
					</button>
				`;
				document.body.appendChild(banner);
			}
			
			function showAndroidInstallInstructions() {
				var banner = document.createElement('div');
				banner.id = 'android-install-banner';
				banner.style.cssText = `
					position: fixed;
					bottom: 0;
					left: 0;
					right: 0;
					background: white;
					padding: 15px;
					box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
					z-index: 9999;
					font-family: system-ui, -apple-system, sans-serif;
					text-align: center;
				`;
				banner.innerHTML = `
					<p style="margin: 0 0 10px 0; color: #333;">
						Diese Seite als App installieren. Öffnen Sie das Menü 
						<span style="display: inline-block; font-size: 20px; vertical-align: middle;">⋮</span>
						und wählen Sie „Zum Startbildschirm hinzufügen".
					</p>
					<button onclick="this.parentElement.remove(); localStorage.setItem('android-install-dismissed', 'true');" 
							style="background: #4CAF50; color: #fff; border: none; padding: 8px 20px; border-radius: 20px; cursor: pointer;">
						Verstanden
					</button>
				`;
				document.body.appendChild(banner);
			}
		})();
		</script>
		
		<!-- Tarteaucitron Cookie Consent -->
		<script is:inline src="/tarteaucitron/tarteaucitron.js"></script>
		<script is:inline src="/tarteaucitron/lang/tarteaucitron.de.js"></script>
		<script is:inline src="/tarteaucitron/tarteaucitron.services.minimal.js"></script>
		<script is:inline>
		tarteaucitron.init({
			"privacyUrl": "/datenschutz", /* Privacy policy URL */
			"bodyPosition": "bottom", /* Banner position */
			"hashtag": "#tarteaucitron", /* Open panel with this hashtag */
			"cookieName": "tarteaucitron", /* Cookie name */
			"orientation": "bottom", /* Banner orientation */
			"groupServices": false, /* Group services */
			"serviceDefaultState": "wait", /* Default state for services - GDPR compliant */
			"showAlertSmall": false, /* Hide small banner - only show on first visit */
			"cookieslist": true, /* Show cookies list */
			"closePopup": false, /* Show close X on banner */
			"showIcon": false, /* Hide persistent cookie icon */
			"iconPosition": "BottomRight", /* Icon position if ever enabled */
			"adblocker": false, /* Show adblock warning */
			"DenyAllCta": true, /* Show deny all button */
			"AcceptAllCta": true, /* Show accept all button */
			"highPrivacy": true, /* Disable auto consent */
			"alwaysNeedConsent": false, /* Always ask for consent on each page */
			"handleBrowserDNTRequest": false, /* Handle browser DNT */
			"removeCredit": false, /* Remove tarteaucitron credit */
			"moreInfoLink": true, /* Show more info link */
			"useExternalCss": false, /* Use external CSS */
			"useExternalJs": false, /* Use external JS */
			"readmoreLink": "/datenschutz", /* Read more link */
			"mandatory": true, /* Show mandatory message */
			"mandatoryCta": true, /* Allow mandatory accept/deny */
			"googleConsentMode": true, /* Enable Google Consent Mode v2 */
			"partnersList": false /* Show partners list */
		});
		
		// Google Consent Mode v2 default state
		window.dataLayer = window.dataLayer || [];
		function gtag(){dataLayer.push(arguments);}
		
		// Set default consent state for Google
		gtag('consent', 'default', {
			'ad_storage': 'denied',
			'ad_user_data': 'denied',
			'ad_personalization': 'denied',
			'analytics_storage': 'denied',
			'functionality_storage': 'denied',
			'personalization_storage': 'denied',
			'security_storage': 'granted',
			'wait_for_update': 500
		});
		
		// Google Analytics configuration (from environment variable)
		// GA ID is configured in .env file as PUBLIC_GA_MEASUREMENT_ID
		tarteaucitron.user.gtagUa = '${gaId}';
		tarteaucitron.user.gtagCrossdomain = ['mobilitytrailblazers.de'];
		tarteaucitron.user.gtagMore = function() { /* Additional config */ };
		
		// Initialize Google Analytics service
		(tarteaucitron.job = tarteaucitron.job || []).push('gtag');
		</script>
	</body>
</html>

<style is:global>
	/* CSS Variables removed from Layout.astro - now using global.css as single source of truth */

	* {
		box-sizing: border-box;
	}

	html {
		background-color: #F8F0E3;
	}

	body {
		font-family: var(--font-primary);
		line-height: 1.6;
		color: var(--color-text);
		background-color: #F8F0E3;
		margin: 0;
		padding: 0;
		overflow-x: hidden;
	}

	h1, h2, h3, h4, h5, h6 {
		font-family: var(--font-primary);
		font-weight: 600;
		line-height: 1.2;
		margin: 0 0 1rem;
	}

	h1 { font-size: 3.5rem; }
	h2 { font-size: 2.5rem; }
	h3 { font-size: 2rem; }
	h4 { font-size: 1.5rem; }
	h5 { font-size: 1.25rem; }
	h6 { font-size: 1rem; }

	p {
		margin: 0 0 1rem;
	}

	a {
		color: var(--color-accent);
		text-decoration: none;
		transition: color 0.3s ease;
	}

	a:hover {
		color: var(--color-primary);
	}

	button {
		font-family: var(--font-primary);
		cursor: pointer;
		border: none;
		background: none;
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1rem;
	}

	.btn {
		display: inline-block;
		padding: 1rem 2rem;
		background: linear-gradient(135deg, var(--color-primary), var(--color-accent));
		color: #fff;
		border-radius: 50px;
		font-weight: 600;
		text-decoration: none;
		transition: all 0.3s ease;
		border: none;
		cursor: pointer;
	}

	.btn:hover {
		transform: translateY(-2px);
		box-shadow: 0 10px 25px rgb(0, 0, 0, 0.2);
		color: #fff;
	}

	.section {
		padding: 4rem 0;
	}

	.text-center {
		text-align: center;
	}

	.text-left {
		text-align: left;
	}

	.text-right {
		text-align: right;
	}

	@media (max-width: 768px) {
		h1 { font-size: 2.5rem; }
		h2 { font-size: 2rem; }
		h3 { font-size: 1.5rem; }
		
		.section {
			padding: 2rem 0;
		}
		
		.container {
			padding: 0 0.5rem;
		}
	}
</style>